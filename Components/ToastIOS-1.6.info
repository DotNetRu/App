{"Name":"Toast for iOS","Id":2413,"Alias":"ToastIOS","Description":"# ToastIOS details\n---\n##Description\nUnobstrusive Alert View. When you just want to tell something to user, But don\u0027t want to nag user for pressing any button. Fortunately Toast is your answer.\nBut Toast is exclusive for android. Not any more,With ToastIOS you can toast to user softly,simply.\n\n##Features\n- Simplest Usage.\n- Unobstrusive Notication.\n- With or without Icon.\n- Customizable with tons of options.\n- Unified Library\n\n##For Simplest Usage\n\t\n    Toast.MakeText(\"your show text\").Show();\n##For Android Fan Usage\nFor one who accustomer to android toast. You can use same syntax here.\n\n    Toast.MakeText(\"your show text\",Toast.LENGTH_LONG).Show();\n##For Customizing Usage\n\n    Toast.MakeText(\"your show text\")\n        .SetUseShadow(true)\n        .SetGravity(ToastGravity.Top)\n        .SetCornerRadius (15)\n        .SetDuration(3000)\n        .SetImageLocation(ToastImageLocation.Left)\n        .SetGravity(ToastGravity.Top)\n        .Show(ToastType.Warning);\n\n### icon made by\n\n\u0027toast icon\u0027 created by Jacob Halton from the Noun Project\n\n\u0027warning icon\u0027,\u0027info icon\u0027,\u0027notice icon\u0027,\u0027error icon \u0027 created by www.flaticon.com","Version":"1.6","Summary":"Toast for iOS (Easiest to use notifications) (same as Android)","QuickStart":"# Getting Started with ToastIOS\n---\n\n\n##FirstStep  \n    using ToastIOS;\n\n___\n\n##If you just want simplest pattern,use  :  \n    Toast.MakeText(\"your show text\").Show();\n\n---\n\n##If you want to show with icon:\n###(Info icon) \n    Toast.MakeText(\"your show text\").Show(ToastType.Info);\n###(Notice icon)\n    Toast.MakeText(\"your show text\").Show(ToastType.Notice);\n###(Warning icon)\n    Toast.MakeText(\"your show text\").Show(ToastType.Warning);\n###(Error icon)\n    Toast.MakeText(\"your show text\").Show(ToastType.Error);\n\n----\n##If you accustom to android, You may use same pattern as android\n    Toast.MakeText(\"Android Like Toast ?\",Toast.LENGTH_SHORT).Show();\n####or\n    Toast.MakeText(\"Android Like Toast ?\",Toast.LENGTH_LONG).Show();\n\n----\n\n##If you want to customize. You can add \u0027.SetXXX(xxx)\u0027 after .MakeText(..) stackingly.\n such as \n\n###Set Where toast will be shown.(Top,Center,Bottom)\n    Toast.MakeText(\"your show text\")\n        .SetGravity(ToastGravity.Top)\n        .Show();\n\n###Set How long toast will be shown in millisecond \n    Toast.MakeText(\"your show text\")\n        .SetDuration(3000)\n        .Show();\n\n###Set Where icon will be shown relative to text.(Top,Left)\n    Toast.MakeText(\"your show text\")\n        .SetImageLocation(ToastImageLocation.Top)\n        .Show(ToastType.Notice);\n\n###Set Font Size :\n    Toast.MakeText(\"your show text\")\n        .SetFontSize (15)\n        .Show();\n\n###Set Whether Toast have shadow or not.\n    Toast.MakeText(\"your show text\")\n        .SetUseShadow(true)\n        .Show();\n\n###Set Corner Radius Size :\n    Toast.MakeText(\"your show text\")\n        .SetCornerRadius (15)\n        .Show();\n\n###Set Everything Mix and Match\n    Toast.MakeText(\"your show text\")\n    \t.SetUseShadow(true)\n    \t.SetGravity(ToastGravity.Top)\n        .SetCornerRadius (15)\n        .SetDuration(3000)\n        .SetImageLocation(ToastImageLocation.Left)\n        .SetGravity(ToastGravity.Top)\n        .Show(ToastType.Warning);\n\n----","Hash":"5c6d5d2cf10fbe005d9dfe35390adb69","TargetPlatforms":["ios","ios-unified"],"TrialHash":null}