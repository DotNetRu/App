{"Name":"Google App Indexing for iOS","Id":2766,"Alias":"googleiosappindexing","Description":"App Indexing puts your app in front of users who use Google Search. It works by indexing the URL patterns you provide in your app manifest and using API calls from your app to make content within your app available to both existing and new users. Specifically, when you support URLs for your app content, iOS users can go directly to it from Search results on their device. Finally, Google uses App Indexing API calls from your app as a ranking signal for your URLs.\n\n## How App Indexing works for iOS\n\n### Support HTTP URLs to your mobile app.\n\niOS apps support HTTP URLs and use site association to verify the relationship between the app and its website. This allows Google systems to index URLs that work for both your site and your app and to serve them in search results.\n\nOnce you associate your app to your website, Google systems quickly recognize the association and begin the crawling and discovery process for your app URLs. This can take between 24 hours and a number of days, depending on a number of factors. Because most app content is currently associated with web content, crawl scheduling works in a fashion similar to that of webpages: Google take into account multiple factors like frequency of content updates, server load, importance, and freshness of the page. Google will send you a message in Search console when content from your app shows up in search (“first impression”). If it’s been a couple weeks and you still don’t see any app links in search, check for crawl errors. Read about [Google Search crawl frequency][1] on Google Help Center.\n\n[1]: https://support.google.com/webmasters/answer/34439\n\n### Add the App Indexing API or SDK.\n\nUse the App Indexing SDK for iOS 9. The use of Google SDK enhances ranking performance for the URLs and provides the basis for link titles and content snippets. This provides the titles and description snippets associated with your content, as well as the history of actions to your app. Users of your app can delete past activity in apps at https://history.google.com/.\n\n### Check your implementation.\n\nTest URLs to your app in your development environment to make sure they lead to the correct content.\n\n## Technical requirements\n\nGoogle App Indexing documentation for iOS 9 serves iOS universal links from Google Search in Safari. App Indexing for iOS versions 7 and 8 is now deprecated and no longer available for new integrations.","Version":"2.0.3.0","Summary":"Get your app found in Google Search.","QuickStart":"## Support HTTP URLs\n\nApp Indexing for iOS 9 uses HTTP URLs to direct users to content in your app. If you’ve already followed the instructions to [support universal links][1] in your app, you can skip this section. Otherwise, do the following:\n\n### Create the app-to-site association.\n\nThis involves two things:\n\n- Add a `com.apple.developer.associated-domains` entitlement in entitlement.plist file that lists each domain associated with your app.\n- Create an `apple-app-site-association` file for each associated domain with the content your app supports and host it at the root level.\n\n*Note: The association file must be hosted on a domain that supports HTTPS/TLS, even if the HTTP deep links are not themselves served via HTTPS.*\n\n#### Preparing Your Website\n\n1. Create a apple-app-site-association file. Note that there’s no .json file type\n2. Place the apple-app-site-association file and identify app IDs and paths on your website. You can define several apps in this file and iOS will follow the app order when looking for a match so you can specify different apps to handle different paths on your website.\n\nHere\u0027s an example of file\u0027s content:\n\n```\n{\n    \"applinks\": {\n        \"apps\": [],\n        \"details\": [\n            {\n                \"appID\": \"9JA89QQLNQ.com.apple.wwdc\",\n                \"paths\": [ \"/wwdc/news/\", \"/videos/wwdc/2015/*\"]\n            },\n            {\n                \"appID\": \"TeamID.BundleID2\",\n                \"paths\": [ \"*\" ]\n            }\n        ]\n    }\n}\n```\n\nThe apps key in an apple-app-site-association file must be present and its value must be an empty array. The value of the details key is an array of dictionaries, one dictionary per app that your website supports. The order of the dictionaries in the array determines the order the system follows when looking for a match, so you can specify an app to handle a particular part of your website.\n\nEach app-specific dictionary contains an appID key and a paths key. The value of the appID key is the app’s team ID and the bundle ID; the value of the paths key is an array of strings that specify the parts of your website that are supported by the app and the parts of your website that you don’t want to associate with the app. To specify an area that should not be handled as a universal link, add “NOT ” (including a space after the T) to the beginning of the path string. For example:\n\n```\n\"paths\": [ \"/wwdc/news/\", \"NOT /videos/wwdc/2010/*\", \"/videos/wwdc/201?/*\"]\n```\n\nUpload the apple-app-site-association file in the root of your HTTPS web server. The file should be accessible without redirects at http://\u003cdomain\u003e/apple-app-site-association\n\n### Preparing your App\n\n#### Creating an App ID and provisioning profile\n\nTo make Universal Links works, you need to create a Provisioning Profile with an Explicit App Id with Associated Domains Services enabled. To achieve this, follow this steps:\n\n1. On the Apple Developer Member Center home page, click Certificates, Identifiers \u0026 Profiles.\n2. On the Certificates, Identifiers \u0026 Profiles page, under the iOS Apps column, click Identifiers.\n3. On the iOS App IDs page, click on the **+** button.\n4. On the Registering an App ID page, enter an App ID Description/Name, select **Explicit App ID**, enter your app’s Bundle ID, enable **Associated Domains\n** Service and then click Continue.\n5. On the Confirm your App ID page, click Submit.\n6. On the Registration complete page, click Done.\n7. Create a provisioning profile with the new App ID.\n\n#### Enabling Associated Domains in your app\n\n1. In you Xamarin iOS project, open the Entitlements.plist file\n2. Open the Associated Domains header and check **Enable Associated Domains**\n3. Add your domains starting with `applinks:`, for example: `applinks:xamarin.com`\n\n#### Add handling for universal links to your app.\n\nAdopt the [UIApplicationDelegate][2] methods so that your app opens the appropriate app content in response to the user’s click from search results.\n\n```csharp\npublic override bool ContinueUserActivity (UIApplication application, NSUserActivity userActivity, UIApplicationRestorationHandler completionHandler)\n{\n\tif (userActivity.ActivityType == NSUserActivityType.BrowsingWeb) {\n\t\t// Do your magic here.\n\t}\n\n\treturn true;\n}\n```\n\n[1]: https://developer.apple.com/library/prerelease/ios/documentation/General/Conceptual/AppSearch/UniversalLinks.html#//apple_ref/doc/uid/TP40016308-CH12-SW1\n[2]: https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UIApplicationDelegate_Protocol/index.html#//apple_ref/occ/intf/UIApplicationDelegate\n\n## Register your app to Google system\n\nCall the `RegisterApp` method in your `FinishedLaunching` method.\n\n```csharp\nAppIndexing.SharedInstance.RegisterApp (\"YOUR_ITUNES_ID\");\n```\n\nYou\u0027re all set! Once Google\u0027s crawlers discover the the URLs in your association file, Google will automatically start indexing any existing or new HTTP deep links to your app.\n\n## Check Your Implementation\n\nOnce you\u0027ve completed setup for App Indexing, you can verify your universal links prior to their appearance in Google Search by tapping a universal link in Safari on your device and making sure that it takes you to the right place in the app.\n\n*Note: You cannot test universal links on simulator.*\n\n## Enhance Your Search Performance\n\nA key way to enhance your app\u0027s ranking is to provide high-quality content in your site and your app. Specifically, keep in mind the following:\n\n- Make sure your associated site meets Google\u0027s [design and content guidelines][3].\n- Follow the same layout practices recommended for your [mobile-friendly homepage][4]. For example, keep your titles short and avoid full-width menus.\n\nIn order to ensure a great search experience for users, Google may take corrective action in cases where they see abuse, deception, or other actions that hurt the search experience for users. This can include actions such as demoting or removing your app deep links from Google Search results.\n\n[3]: https://support.google.com/webmasters/answer/35769?vid=1-635785548570479109-2344616627#design_and_content_guidelines\n[4]: https://developers.google.com/web/fundamentals/layouts/principles/","Hash":"f328b570c55fefc94c021207f04c3365","TargetPlatforms":["ios","ios-unified"],"TrialHash":null}