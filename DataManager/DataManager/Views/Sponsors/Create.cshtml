@model DataManager.ViewModels.SponsorViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Sponsor</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(model => model.TrackedSponsor.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TrackedSponsor.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TrackedSponsor.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TrackedSponsor.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TrackedSponsor.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TrackedSponsor.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TrackedSponsor.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TrackedSponsor.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TrackedSponsor.ImageUrl, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TrackedSponsor.WebsiteUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TrackedSponsor.WebsiteUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TrackedSponsor.WebsiteUrl, "", new { @class = "text-danger" })
                @Html.DescriptionFor(model => model.TrackedSponsor.WebsiteUrl)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TrackedSponsor.TwitterUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TrackedSponsor.TwitterUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TrackedSponsor.TwitterUrl, "", new { @class = "text-danger" })
                @Html.DescriptionFor(model => model.TrackedSponsor.TwitterUrl)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TrackedSponsor.FacebookProfileName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TrackedSponsor.FacebookProfileName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TrackedSponsor.FacebookProfileName, "", new { @class = "text-danger" })
                @Html.DescriptionFor(model => model.TrackedSponsor.FacebookProfileName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TrackedSponsor.LinkedInUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TrackedSponsor.LinkedInUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TrackedSponsor.LinkedInUrl, "", new { @class = "text-danger" })
                @Html.DescriptionFor(model => model.TrackedSponsor.LinkedInUrl)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TrackedSponsor.BoothLocation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TrackedSponsor.BoothLocation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TrackedSponsor.BoothLocation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TrackedSponsor.SponsorLevel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">

                <select id="SubmittedSponsorLevel" name="SubmittedSponsorLevel" class="chosen-select" data-placeholder="Select SponsorLevel">
                    @foreach (var level in Model.AvailableSponsorLevels)
                    {
                        <option value="@level.Id"
                                @if (Model.TrackedSponsor.SponsorLevel?.Id == level.Id) { @: selected
                                                                                                                                 }>
                            @level.Name
                        </option>
                    }
                </select>
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.TrackedSponsor.Rank, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TrackedSponsor.Rank, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TrackedSponsor.Rank, "", new { @class = "text-danger" })
                @Html.DescriptionFor(model => model.TrackedSponsor.Rank)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
