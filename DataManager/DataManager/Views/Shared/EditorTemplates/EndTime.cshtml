@model DateTime?

<select id="TrackedSession.EndTime" name="TrackedSession.EndTime" class="chosen-select" data-placeholder="Select End time">
    <option value="TBD"
            @if (Model == null || Model.Equals(DateTime.MinValue))
            { @: selected
                                                                                             }>
        TBD
    </option>
    @{  var time = DateTime.SpecifyKind( new DateTime(2016, 10, 4, 6, 0, 0),DateTimeKind.Utc);

        var techdaysTimezone = TimeZoneInfo.FindSystemTimeZoneById("W. Europe Standard Time");
        for (int x = 0; x < 45 *3; x++)
        {
            time = time.AddMinutes(5);
            <option value="@time.ToString("dd-MM-yyyy HH:mm")"
                    @if (Model != null && Model.Equals(time)) { @: selected
                           }>
                @TimeZoneInfo.ConvertTimeFromUtc(time, techdaysTimezone).ToString("dd-MM-yyyy HH:mm")
           </option>
        }
    }

    @{  time = DateTime.SpecifyKind(new DateTime(2016, 10, 5, 6, 0, 0),DateTimeKind.Utc);

        for (int x = 0; x < 39 *3; x++)
        {
            time = time.AddMinutes(5);
            <option value="@time.ToString("dd-MM-yyyy HH:mm")"
                    @if (Model != null && Model.Equals(time)) { @: selected
                                               }>
                @TimeZoneInfo.ConvertTimeFromUtc(time, techdaysTimezone).ToString("dd-MM-yyyy HH:mm")
            </option>
        }
    }
</select>